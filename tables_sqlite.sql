-- MySQL Script generated by MySQL Workbench
-- Sat May 31 20:15:31 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `roles`
(
    `id`   INTEGER     NOT NULL PRIMARY KEY AUTOINCREMENT,
    `name` VARCHAR(64) NOT NULL
);
--ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `roles` (`name` ASC);


-- -----------------------------------------------------
-- Table `accounts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `accounts`
(
    `id`         INTEGER       NOT NULL PRIMARY KEY AUTOINCREMENT,
    `email`      VARCHAR(512)  NOT NULL,
    `password`   VARCHAR(1024) NOT NULL,
    `salt`       VARCHAR(1024) NOT NULL,
    `roles_id`   INT           NOT NULL,
    `created_at` INT           NOT NULL,
    `updated_at` INT           NOT NULL,
    CONSTRAINT `fk_accounts_roles1`
        FOREIGN KEY (`roles_id`)
            REFERENCES `roles` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);
--ENGINE = InnoDB;

CREATE UNIQUE INDEX `email_UNIQUE` ON `accounts` (`email` ASC);

CREATE INDEX `fk_accounts_roles1_idx` ON `accounts` (`roles_id` ASC);


-- -----------------------------------------------------
-- Table `item_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `item_types`
(
    `index` INTEGER     NOT NULL PRIMARY KEY AUTOINCREMENT,
    `name`  VARCHAR(45) NOT NULL
);
--ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `status`
(
    `index` INTEGER     NOT NULL PRIMARY KEY AUTOINCREMENT,
    `name`  VARCHAR(45) NOT NULL
);
--ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `manga`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `manga`
(
    `id`                        INTEGER       NOT NULL,
    `name`                      VARCHAR(1024) NOT NULL,
    `link`                      VARCHAR(1024) NOT NULL,
    `image_url`                 VARCHAR(1024) NOT NULL,
    `description`               VARCHAR(4096) NULL,
    `author`                    VARCHAR(512)  NULL,
    `artist`                    VARCHAR(512)  NULL,
    `status_index`              INT           NOT NULL,
    `favorite`                  TINYINT       NOT NULL,
    `source`                    VARCHAR(512)  NOT NULL,
    `lang`                      VARCHAR(45)   NOT NULL,
    `date_added`                INT           NOT NULL,
    `last_update`               INT           NULL,
    `last_read`                 INT           NULL,
    `is_local_archive`          TINYINT       NULL,
    `custom_cover_image`        BINARY(16384) NULL,
    `custom_cover_from_tracker` VARCHAR(1024) NULL,
    `item_type`                 INT           NOT NULL,
    `user`                      INT           NOT NULL,
    `genres`                    VARCHAR(1024) NULL,
    `updated_at`                INT           NOT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_manga_item_types`
        FOREIGN KEY (`item_type`)
            REFERENCES `item_types` (`index`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_manga_users1`
        FOREIGN KEY (`user`)
            REFERENCES `accounts` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_manga_status1`
        FOREIGN KEY (`status_index`)
            REFERENCES `status` (`index`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);
--ENGINE = InnoDB;

CREATE INDEX `fk_manga_item_types_idx` ON `manga` (`item_type` ASC);

CREATE INDEX `fk_manga_users1_idx` ON `manga` (`user` ASC);

CREATE INDEX `fk_manga_status1_idx` ON `manga` (`status_index` ASC);


-- -----------------------------------------------------
-- Table `categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `categories`
(
    `id`            INTEGER      NOT NULL,
    `name`          VARCHAR(512) NOT NULL,
    `for_item_type` INT          NOT NULL,
    `pos`           INT          NULL,
    `hide`          TINYINT      NULL,
    `user`          INT          NOT NULL,
    `updated_at`    INT          NOT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_categories_item_types1`
        FOREIGN KEY (`for_item_type`)
            REFERENCES `item_types` (`index`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_categories_accounts1`
        FOREIGN KEY (`user`)
            REFERENCES `accounts` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);
--ENGINE = InnoDB;

CREATE INDEX `fk_categories_item_types1_idx` ON `categories` (`for_item_type` ASC);

CREATE INDEX `fk_categories_accounts1_idx` ON `categories` (`user` ASC);


-- -----------------------------------------------------
-- Table `chapters`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `chapters`
(
    `id`             INTEGER       NOT NULL,
    `name`           VARCHAR(1024) NOT NULL,
    `url`            VARCHAR(1024) NOT NULL,
    `date_upload`    VARCHAR(512)  NOT NULL,
    `scanlator`      VARCHAR(512)  NULL,
    `is_bookmarked`  TINYINT       NOT NULL,
    `is_read`        TINYINT       NOT NULL,
    `last_page_read` VARCHAR(512)  NOT NULL,
    `archive_path`   VARCHAR(1024) NULL,
    `manga`          INT           NOT NULL,
    `updated_at`     INT           NOT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_chapters_manga1`
        FOREIGN KEY (`manga`)
            REFERENCES `manga` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);
--ENGINE = InnoDB;

CREATE INDEX `fk_chapters_manga1_idx` ON `chapters` (`manga` ASC);


-- -----------------------------------------------------
-- Table `histories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `histories`
(
    `id`         INTEGER      NOT NULL,
    `date`       VARCHAR(512) NOT NULL,
    `chapter`    INT          NOT NULL,
    `item_type`  INT          NOT NULL,
    `updated_at` INT          NOT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_histories_chapters1`
        FOREIGN KEY (`chapter`)
            REFERENCES `chapters` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_histories_item_types1`
        FOREIGN KEY (`item_type`)
            REFERENCES `item_types` (`index`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);
--ENGINE = InnoDB;

CREATE INDEX `fk_histories_chapters1_idx` ON `histories` (`chapter` ASC);

CREATE INDEX `fk_histories_item_types1_idx` ON `histories` (`item_type` ASC);


-- -----------------------------------------------------
-- Table `sources`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sources`
(
    `id`                   INTEGER       NOT NULL,
    `api_url`              VARCHAR(1024) NULL,
    `app_min_ver_req`      VARCHAR(512)  NULL,
    `base_url`             VARCHAR(1024) NOT NULL,
    `date_format`          VARCHAR(512)  NULL,
    `date_format_locale`   VARCHAR(45)   NULL,
    `has_cloudflare`       TINYINT       NULL,
    `headers`              VARCHAR(1024) NULL,
    `icon_url`             VARCHAR(1024) NULL,
    `is_active`            TINYINT       NOT NULL,
    `is_added`             TINYINT       NULL,
    `is_full_data`         TINYINT       NULL,
    `is_manga`             TINYINT       NULL,
    `item_type`            INT           NOT NULL,
    `is_nsfw`              TINYINT       NULL,
    `is_pinned`            TINYINT       NULL,
    `lang`                 VARCHAR(45)   NOT NULL,
    `last_used`            TINYINT       NULL,
    `name`                 VARCHAR(512)  NOT NULL,
    `source_code_url`      VARCHAR(1024) NOT NULL,
    `type_source`          VARCHAR(512)  NULL,
    `version`              VARCHAR(512)  NOT NULL,
    `version_last`         VARCHAR(512)  NULL,
    `additional_params`    VARCHAR(1024) NULL,
    `source_code_language` VARCHAR(45)   NULL,
    `is_obsolete`          TINYINT       NULL,
    `is_local`             TINYINT       NULL,
    `user`                 INT           NOT NULL,
    `updated_at`           INT           NOT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_sources_item_types1`
        FOREIGN KEY (`item_type`)
            REFERENCES `item_types` (`index`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_sources_users1`
        FOREIGN KEY (`user`)
            REFERENCES `accounts` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);
--ENGINE = InnoDB;

CREATE INDEX `fk_sources_item_types1_idx` ON `sources` (`item_type` ASC);

CREATE INDEX `fk_sources_users1_idx` ON `sources` (`user` ASC);


-- -----------------------------------------------------
-- Table `track_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `track_status`
(
    `index` INTEGER     NOT NULL PRIMARY KEY AUTOINCREMENT,
    `name`  VARCHAR(45) NOT NULL
);
--ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tracks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tracks`
(
    `id`                    INTEGER     NOT NULL,
    `library_id`            INT         NOT NULL,
    `media_id`              INT         NOT NULL,
    `manga_id`              INT         NOT NULL,
    `score`                 INT         NULL,
    `started_reading_date`  INT         NULL,
    `finished_reading_date` INT         NULL,
    `last_chapter_read`     INT         NULL,
    `track_status_index`    INT         NOT NULL,
    `sync_id`               INT         NOT NULL,
    `title`                 VARCHAR(45) NOT NULL,
    `total_chapter`         INT         NULL,
    `tracking_url`          VARCHAR(45) NOT NULL,
    `is_manga`              TINYINT     NULL,
    `updated_at`            INT         NOT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_tracks_manga1`
        FOREIGN KEY (`manga_id`)
            REFERENCES `manga` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_tracks_track_status1`
        FOREIGN KEY (`track_status_index`)
            REFERENCES `track_status` (`index`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);
--ENGINE = InnoDB;

CREATE INDEX `fk_tracks_manga1_idx` ON `tracks` (`manga_id` ASC);

CREATE INDEX `fk_tracks_track_status1_idx` ON `tracks` (`track_status_index` ASC);


-- -----------------------------------------------------
-- Table `updates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `updates`
(
    `id`           INTEGER       NOT NULL,
    `chapter_name` VARCHAR(1024) NOT NULL,
    `date`         VARCHAR(512)  NOT NULL,
    `chapter`      INT           NOT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `fk_updates_chapters1`
        FOREIGN KEY (`chapter`)
            REFERENCES `chapters` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);
--ENGINE = InnoDB;

CREATE INDEX `fk_updates_chapters1_idx` ON `updates` (`chapter` ASC);


-- -----------------------------------------------------
-- Table `categ_manga`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `categ_manga`
(
    `categories_id` INTEGER NOT NULL,
    `manga_id`      INTEGER NOT NULL,
    PRIMARY KEY (`categories_id`, `manga_id`),
    CONSTRAINT `fk_categories_has_manga_categories1`
        FOREIGN KEY (`categories_id`)
            REFERENCES `categories` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_categories_has_manga_manga1`
        FOREIGN KEY (`manga_id`)
            REFERENCES `manga` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);
--ENGINE = InnoDB;

CREATE INDEX `fk_categories_has_manga_manga1_idx` ON `categ_manga` (`manga_id` ASC);

CREATE INDEX `fk_categories_has_manga_categories1_idx` ON `categ_manga` (`categories_id` ASC);


-- -----------------------------------------------------
-- Table `backups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `backups`
(
    `id`          INTEGER       NOT NULL PRIMARY KEY AUTOINCREMENT,
    `created_at`  INT           NULL,
    `backup_path` VARCHAR(1024) NULL,
    `user`        INT           NOT NULL,
    CONSTRAINT `fk_backups_accounts1`
        FOREIGN KEY (`user`)
            REFERENCES `accounts` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
);
--ENGINE = InnoDB;

CREATE INDEX `fk_backups_accounts1_idx` ON `backups` (`user` ASC);

INSERT INTO roles (name)
VALUES ('basic'),
       ('mod'),
       ('admin');

INSERT INTO item_types (name)
VALUES ('manga'),
       ('anime'),
       ('novel');

INSERT INTO status (name)
VALUES ('ongoing'),
       ('completed'),
       ('canceled'),
       ('unknown'),
       ('onHiatus'),
       ('publishingFinished');

INSERT INTO track_status (name)
VALUES ('reading'),
       ('completed'),
       ('onHold'),
       ('dropped'),
       ('planToRead'),
       ('reReading'),
       ('watching'),
       ('planToWatch'),
       ('reWatching');
