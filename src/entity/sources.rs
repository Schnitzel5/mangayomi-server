//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "sources")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i32,
    pub api_url: Option<String>,
    pub app_min_ver_req: Option<String>,
    pub base_url: String,
    pub date_format: Option<String>,
    pub date_format_locale: Option<String>,
    pub has_cloudflare: Option<i8>,
    pub headers: Option<String>,
    pub icon_url: Option<String>,
    pub is_active: i8,
    pub is_added: Option<i8>,
    pub is_full_data: Option<i8>,
    pub is_manga: Option<i8>,
    pub item_type: i32,
    pub is_nsfw: Option<i8>,
    pub is_pinned: Option<i8>,
    pub lang: String,
    pub last_used: Option<i8>,
    pub name: String,
    pub source_code_url: String,
    pub type_source: Option<String>,
    pub version: String,
    pub version_last: Option<String>,
    pub additional_params: Option<String>,
    pub source_code_language: Option<String>,
    pub is_obsolete: Option<i8>,
    pub is_local: Option<i8>,
    pub user: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::accounts::Entity",
        from = "Column::User",
        to = "super::accounts::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Accounts,
    #[sea_orm(
        belongs_to = "super::item_types::Entity",
        from = "Column::ItemType",
        to = "super::item_types::Column::Index",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    ItemTypes,
}

impl Related<super::accounts::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Accounts.def()
    }
}

impl Related<super::item_types::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ItemTypes.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
